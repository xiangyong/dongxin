<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd"
	default-autowire="byName">   

	<!-- http调用订单接口的url地址 -->
<!-- 	<bean id="purchaseUrlMap" class="java.util.HashMap">
		<constructor-arg>
			<map key-type="java.lang.String" value-type="java.lang.String">
				<entry key="getAddressUrl"
					value="http://purchase.soa.360buy.com/soa/PurchaseWebServiceUserTemplate.ashx?action=GetAddressByPin&amp;param=" />
				<entry key="addAddressUrl"
					value="http://purchase.soa.360buy.com/soa/PurchaseWebServiceUserTemplate.ashx?action=AddAddress&amp;param=" />
				<entry key="delAddressUrl"
					value="http://purchase.soa.360buy.com/soa/PurchaseWebServiceUserTemplate.ashx?action=DelAddress&amp;param=" />
				<entry key="submitOrderUrl"
					value="http://purchase.soa.360buy.com/inside2/service.ashx?action=SubmitOrder&amp;param=" />
			</map>
		</constructor-arg>
	</bean> -->
	<!-- 下单接口初始化 线上超时时间设置为一秒 -->
<!-- 	<bean id="purchaseHttpClient" class="com.jd.platform.rpc.purchase.PurchaseHttpClient">
		<property name="tokent" value="UE3XWEFfjf1x8hizm6PQmg%3d%3d" />
		<property name="requestTimeOut" value="120000" />
		<property name="soTimeOut" value="120000" />
	</bean> -->

	<!-- price saf my pageage -->
	<bean id="safPriceService" class="com.jd.platform.rpc.safprice.impl.SafPriceServiceImpl" />
	<!-- product saf my pageage -->
	<bean id="productSafService" class="com.jd.platform.rpc.product.ProductSafService" />

	<!-- 商品地区限购接口配置 线上HOST：172.17.21.45-52 promise.trade.jd.local -->
	 <bean id="httpClient3" class="com.jd.purchase.promise.client.MultiThreadHttpClient3">
		<property name="timeout" value="1000"></property>
		<property name="readTimeout" value="2000"></property>
		<property name="perhostMaxConnection" value="500"></property>
		<property name="totalMaxConnection" value="1000"></property>
	</bean> 

	<!-- <bean id="purchasePromiseHttpService"
		class="org.jboss.resteasy.client.spring.RestClientProxyFactoryBean">
		<property name="serviceInterface"
			value="com.jd.purchase.promise.service.PurchasePromiseHttpService"></property>
		<property name="baseUri" value="http://promise.trade.jd.local/"></property>
		<property name="httpClient" ref="httpClient3"></property>
	</bean>  -->
	<bean id="purchasePromiseService" class="com.jd.purchase.promise.service.impl.PurchasePromiseService"></bean>

	<bean id="deliveryClient"
		class="com.jd.stockconfig.client.delivery.DeliveryConfigWebservice"
		factory-bean="clientFactory2" factory-method="create" />
	<bean id="clientFactory2" class="org.apache.cxf.jaxws.JaxWsProxyFactoryBean">
		<property name="serviceClass"
			value="com.jd.stockconfig.client.delivery.DeliveryConfigWebservice" />
		<property name="address"
			value="http://stockconfig.soa.jd.local/services/DeliveryConfigService" />
		<property name="outInterceptors">
			<list>
				<ref bean="jdSnoSOAPHeader" />
			</list>
		</property>
	</bean>

	<bean id="jdSnoSOAPHeader" class="com.jd.common.ws.SOAPHeaderIntercepter">
		<property name="authHeader" ref="authHeader" />
	</bean>

	<bean id="authHeader" class="com.jd.common.ws.AuthHeader">
		<property name="content" value="token" />
		<property name="key" value="AuthenticationHeader" />
		<property name="seed" value="123456" />
		<property name="qName" value="stockconfig.soa.jd.local" />
	</bean>

	<!-- 邮件发送客户端 -->
	<bean id="pushEmailWebService" class="com.jd.platform.rpc.email.CustomMailInterface"
		factory-bean="pushEmailClientFactory" factory-method="create" />
	<bean id="brandNameSoapHeaderIntercepter" class="com.jd.common.ws.SOAPHeaderIntercepter">
		<property name="authHeader">
			<bean class="com.jd.common.ws.AuthHeader">
				<property name="content" value="123456" />
				<property name="seed" value="" />
				<property name="key" value="AuthenticationHeader" />
				<property name="qName" value="http://360buy.com//" />
			</bean>
		</property>
	</bean>
	<bean id="pushEmailClientFactory" class="org.apache.cxf.jaxws.JaxWsProxyFactoryBean">
		<property name="serviceClass"
			value="com.jd.platform.rpc.email.CustomMailInterface" />
		<property name="address"
			value="http://mail.edm.360buy.com/services/services/customMailInterface.asmx" />
		<property name="outInterceptors">
			<list>
				<ref bean="brandNameSoapHeaderIntercepter" />
			</list>
		</property>
	</bean>

	<!-- 引入用户中间件 -->
	 <bean id="rpcJdUserService" class="com.jd.sns.u.soa.client.IceClientBean" destroy-method="close">
	    <property name="prxClsName" value="com.jd.uic.soa.rpc.RpcJdUserServicePrx"/>
		<property name="url" value="RpcJdUserService:tcp -h 192.168.200.214 -p 20000 -t 10000:tcp -h 192.168.200.215 -p 20000 -t 10000" />
		<property name="context" >
			<map>
				<entry key="APP">
					<value>fuwu.jd.com</value>
				</entry>
				<entry key="TOKEN">
					<value>testtest123</value>
				</entry>
			</map> 
	          </property>
	</bean>
	
	
	 	<!-- 短信相关的接口 -->
	<bean id="sendUmMsg" class="com.jd.msg.sender.client.proxyClient.SendUmMsg">
		<property name="loginHandler">
			<ref bean="loginHandler" />
		</property>
	</bean>
	<bean id="loginHandler" class="com.jd.msg.sender.client.proxyClient.LoginHandler">
		<property name="content">
			<value>123456</value>
		</property>
		<property name="seed">
			<value>123456</value>
		</property>
		<property name="qName">
			<value>http://mms.360buy.com/services/NewMessageServer</value>
		</property>
	</bean>

	<!-- 通用下单 -->
	<bean id="verticalSubmitOrderRPC" class="com.jd.platform.rpc.ordersubmit.vertical.impl.VerticalSubmitOrderRPCImpl">
	</bean>
	
	<!-- 实时价格  -->
	<bean id="realtimePriceRPC" class="com.jd.platform.rpc.process.impl.RealtimePriceRPCImpl" />
	
	<!-- 富士冲印  -->
	<bean id="fsPhotoRPC" class="com.jd.platform.rpc.process.impl.FsPhotoRPCImpl" />
	
	<bean id="productService" class="com.jd.platform.rpc.process.impl.ProductServiceRPCImpl" />

	<!-- 增值税发票  -->
	<bean id="vatInvoiceRPC" class="com.jd.platform.rpc.process.impl.VatInvoiceRPCImpl" />
	
	<!-- orderver  -->
	<bean id="orderverRPC" class="com.jd.platform.rpc.process.impl.OrderverRPCImpl" />

</beans>